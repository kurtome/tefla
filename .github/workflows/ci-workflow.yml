name: Build and test app
on: [push]

env:
  MIX_ENV: test

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [24.1]
    services:
      db:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tefla_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Cache Mix Dependencies
        id: mix-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Cache Build Files
        uses: actions/cache@v1
        with:
          path: _build
          key: ${{ runner.OS }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - name: Check for Unused Dependencies
        run: mix deps.unlock --check-unused
      - name: Compile Dependencies
        run: mix deps.compile
      - name: Compile App
        run: mix compile --warnings-as-errors
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Run Credo
        run: mix credo --strict
      - name: Retrieve PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status
      - name: Run Tests
        run: mix test